# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.4.1-node-browsers
      # - image: circleci/ruby:2.4.1-browsers  # works for Chrome, fails on geckodriver
      - image: selenium/standalone-chrome:3.1.0


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar

      - run:
          name: Start Selenium
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true



      # Defaults:        
      # Database setup
      # - run: bundle exec rake db:create
      # - run: bundle exec rake db:schema:load

      # run tests!
      
      # Production version
      - run:
          name: run tests
          command: |
            rake test

      # Defaults:
      # - run:
      #     name: run tests
      #     command: |
      #       mkdir /tmp/test-results
      #       TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
      #       bundle exec rspec --format progress \
      #                       --format RspecJunitFormatter \
      #                       --out /tmp/test-results/rspec.xml \
      #                       --format progress \
      #                       "${TEST_FILES}"

      #       rake test

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results